{"ast":null,"code":"var baseUrl=\"http://localhost:3000\";function getResponseData(res){return res.ok?res.json():Promise.reject(\"\".concat(res.status,\" \").concat(res.statusText));}export function registration(password,email){return fetch(\"\".concat(baseUrl,\"/signup\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(function(res){return getResponseData(res);});}export function autorization(password,email){return fetch(\"\".concat(baseUrl,\"/signin\"),{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({password:password,email:email})}).then(function(res){return getResponseData(res);});}export function getUserData(token){return fetch(\"\".concat(baseUrl,\"/users/me\"),{method:\"GET\",headers:{\"Content-Type\":\"application/json\",\"Authorization\":\"Bearer \".concat(token)}}).then(function(res){return getResponseData(res);});}","map":{"version":3,"names":["baseUrl","getResponseData","res","ok","json","Promise","reject","concat","status","statusText","registration","password","email","fetch","method","headers","body","JSON","stringify","then","autorization","getUserData","token"],"sources":["C:/Users/L1qwY/dev/react-mesto-auth/src/utils/auth.js"],"sourcesContent":["const baseUrl = \"http://localhost:3000\";\r\n\r\nfunction getResponseData(res) {\r\n  return res.ok\r\n    ? res.json()\r\n    : Promise.reject(`${res.status} ${res.statusText}`);\r\n}\r\n\r\nexport function registration(password, email) {\r\n  return fetch(`${baseUrl}/signup`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      password: password,\r\n      email: email,\r\n    }),\r\n  }).then((res) => getResponseData(res));\r\n}\r\n\r\nexport function autorization(password, email) {\r\n  return fetch(`${baseUrl}/signin`, {\r\n    method: \"POST\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n    body: JSON.stringify({\r\n      password: password,\r\n      email: email,\r\n    }),\r\n  }).then((res) => getResponseData(res));\r\n}\r\n\r\nexport function getUserData(token) {\r\n  return fetch(`${baseUrl}/users/me`, {\r\n    method: \"GET\",\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n    \"Authorization\" : `Bearer ${token}`\r\n    },\r\n  }).then((res) => getResponseData(res));\r\n}\r\n"],"mappings":"AAAA,GAAM,CAAAA,OAAO,CAAG,uBAAuB,CAEvC,QAAS,CAAAC,eAAeA,CAACC,GAAG,CAAE,CAC5B,MAAO,CAAAA,GAAG,CAACC,EAAE,CACTD,GAAG,CAACE,IAAI,CAAC,CAAC,CACVC,OAAO,CAACC,MAAM,IAAAC,MAAA,CAAIL,GAAG,CAACM,MAAM,MAAAD,MAAA,CAAIL,GAAG,CAACO,UAAU,CAAE,CAAC,CACvD,CAEA,MAAO,SAAS,CAAAC,YAAYA,CAACC,QAAQ,CAAEC,KAAK,CAAE,CAC5C,MAAO,CAAAC,KAAK,IAAAN,MAAA,CAAIP,OAAO,YAAW,CAChCc,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBP,QAAQ,CAAEA,QAAQ,CAClBC,KAAK,CAAEA,KACT,CAAC,CACH,CAAC,CAAC,CAACO,IAAI,CAAC,SAACjB,GAAG,QAAK,CAAAD,eAAe,CAACC,GAAG,CAAC,GAAC,CACxC,CAEA,MAAO,SAAS,CAAAkB,YAAYA,CAACT,QAAQ,CAAEC,KAAK,CAAE,CAC5C,MAAO,CAAAC,KAAK,IAAAN,MAAA,CAAIP,OAAO,YAAW,CAChCc,MAAM,CAAE,MAAM,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CAAC,CACDC,IAAI,CAAEC,IAAI,CAACC,SAAS,CAAC,CACnBP,QAAQ,CAAEA,QAAQ,CAClBC,KAAK,CAAEA,KACT,CAAC,CACH,CAAC,CAAC,CAACO,IAAI,CAAC,SAACjB,GAAG,QAAK,CAAAD,eAAe,CAACC,GAAG,CAAC,GAAC,CACxC,CAEA,MAAO,SAAS,CAAAmB,WAAWA,CAACC,KAAK,CAAE,CACjC,MAAO,CAAAT,KAAK,IAAAN,MAAA,CAAIP,OAAO,cAAa,CAClCc,MAAM,CAAE,KAAK,CACbC,OAAO,CAAE,CACP,cAAc,CAAE,kBAAkB,CACpC,eAAe,WAAAR,MAAA,CAAae,KAAK,CACjC,CACF,CAAC,CAAC,CAACH,IAAI,CAAC,SAACjB,GAAG,QAAK,CAAAD,eAAe,CAACC,GAAG,CAAC,GAAC,CACxC"},"metadata":{},"sourceType":"module","externalDependencies":[]}