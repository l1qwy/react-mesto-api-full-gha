{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.baseUrl;\n  }\n  _verifyRes(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject;\n    }\n  }\n  getUserInfoFromSrv(token) {\n    return fetch(this._url + \"users/me\", {\n      headers: {\n        \"Authorization\": `Bearer ${token}`\n      }\n    }).then(this._verifyRes);\n  }\n  getServerCards() {\n    return fetch(this._url + \"cards\", {\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._verifyRes);\n  }\n  setUserInfoToSrv(data) {\n    return fetch(this._url + \"users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.nameProfile,\n        about: data.jobProfile\n      })\n    }).then(this._verifyRes);\n  }\n  changeAvatar(data) {\n    return fetch(this._url + \"users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatarProfile\n      })\n    }).then(this._verifyRes);\n  }\n  addCardToSrv(data) {\n    return fetch(this._url + \"cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._verifyRes);\n  }\n  deleteCardFromSrv(cardId) {\n    return fetch(this._url + \"cards/\" + cardId, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._verifyRes);\n  }\n  activeLike(cardId) {\n    return fetch(this._url + \"cards/\" + cardId + \"/likes\", {\n      method: \"PUT\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._verifyRes);\n  }\n  unactiveLike(cardId) {\n    return fetch(this._url + \"cards/\" + cardId + \"/likes\", {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._verifyRes);\n  }\n}\nconst api = new Api({\n  baseUrl: \"http://localhost:3000\"\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","config","_url","baseUrl","_verifyRes","res","ok","json","Promise","reject","getUserInfoFromSrv","token","fetch","headers","then","getServerCards","authorization","_token","setUserInfoToSrv","data","method","_headers","body","JSON","stringify","name","nameProfile","about","jobProfile","changeAvatar","avatar","avatarProfile","addCardToSrv","link","deleteCardFromSrv","cardId","activeLike","unactiveLike","api"],"sources":["C:/Users/L1qwY/dev/react-mesto-auth/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor(config) {\r\n    this._url = config.baseUrl;\r\n  }\r\n\r\n  _verifyRes(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject;\r\n    }\r\n  }\r\n\r\n  getUserInfoFromSrv(token) {\r\n    return fetch(this._url + \"users/me\", {\r\n      headers: {\r\n        \"Authorization\" : `Bearer ${token}`\r\n      },\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  getServerCards() {\r\n    return fetch(this._url + \"cards\", {\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  setUserInfoToSrv(data) {\r\n    return fetch(this._url + \"users/me\", {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.nameProfile,\r\n        about: data.jobProfile,\r\n      }),\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  changeAvatar(data) {\r\n    return fetch(this._url + \"users/me/avatar\", {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatarProfile,\r\n      }),\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  addCardToSrv(data) {\r\n    return fetch(this._url + \"cards\", {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link,\r\n      }),\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  deleteCardFromSrv(cardId) {\r\n    return fetch(this._url + \"cards/\" + cardId, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  activeLike(cardId) {\r\n    return fetch(this._url + \"cards/\" + cardId + \"/likes\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  unactiveLike(cardId) {\r\n    return fetch(this._url + \"cards/\" + cardId + \"/likes\", {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this._verifyRes);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"http://localhost:3000\",\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}