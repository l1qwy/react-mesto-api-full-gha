{"ast":null,"code":"class Api {\n  constructor(config) {\n    this._url = config.baseUrl;\n    this._headers = config.headers;\n    this._token = config.headers.authorization;\n  }\n  _verifyRes(res) {\n    if (res.ok) {\n      return res.json();\n    } else {\n      return Promise.reject;\n    }\n  }\n  getUserInfoFromSrv() {\n    return fetch(this._url + \"users/me\", {\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._verifyRes);\n  }\n  getServerCards() {\n    return fetch(this._url + \"cards\", {\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._verifyRes);\n  }\n  setUserInfoToSrv(data) {\n    return fetch(this._url + \"users/me\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.nameProfile,\n        about: data.jobProfile\n      })\n    }).then(this._verifyRes);\n  }\n  changeAvatar(data) {\n    return fetch(this._url + \"users/me/avatar\", {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: data.avatarProfile\n      })\n    }).then(this._verifyRes);\n  }\n  addCardToSrv(data) {\n    return fetch(this._url + \"cards\", {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: data.name,\n        link: data.link\n      })\n    }).then(this._verifyRes);\n  }\n  deleteCardFromSrv(cardId) {\n    return fetch(this._url + \"cards/\" + cardId, {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._verifyRes);\n  }\n  activeLike(cardId) {\n    return fetch(this._url + \"cards/\" + cardId + \"/likes\", {\n      method: \"PUT\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._verifyRes);\n  }\n  unactiveLike(cardId) {\n    return fetch(this._url + \"cards/\" + cardId + \"/likes\", {\n      method: \"DELETE\",\n      headers: {\n        authorization: this._token\n      }\n    }).then(this._verifyRes);\n  }\n}\nconst api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66/\",\n  headers: {\n    authorization: \"d4c04a33-0990-4ec8-944d-d2a160888358\",\n    \"Content-Type\": \"application/json\"\n  }\n});\nexport default api;","map":{"version":3,"names":["Api","constructor","config","_url","baseUrl","_headers","headers","_token","authorization","_verifyRes","res","ok","json","Promise","reject","getUserInfoFromSrv","fetch","then","getServerCards","setUserInfoToSrv","data","method","body","JSON","stringify","name","nameProfile","about","jobProfile","changeAvatar","avatar","avatarProfile","addCardToSrv","link","deleteCardFromSrv","cardId","activeLike","unactiveLike","api"],"sources":["C:/Users/L1qwY/dev/mesto-react/src/utils/Api.js"],"sourcesContent":["class Api {\r\n  constructor(config) {\r\n    this._url = config.baseUrl;\r\n    this._headers = config.headers;\r\n    this._token = config.headers.authorization;\r\n  }\r\n\r\n  _verifyRes(res) {\r\n    if (res.ok) {\r\n      return res.json();\r\n    } else {\r\n      return Promise.reject;\r\n    }\r\n  }\r\n\r\n  getUserInfoFromSrv() {\r\n    return fetch(this._url + \"users/me\", {\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  getServerCards() {\r\n    return fetch(this._url + \"cards\", {\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  setUserInfoToSrv(data) {\r\n    return fetch(this._url + \"users/me\", {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.nameProfile,\r\n        about: data.jobProfile,\r\n      }),\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  changeAvatar(data) {\r\n    return fetch(this._url + \"users/me/avatar\", {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar: data.avatarProfile,\r\n      }),\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  addCardToSrv(data) {\r\n    return fetch(this._url + \"cards\", {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name: data.name,\r\n        link: data.link,\r\n      }),\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  deleteCardFromSrv(cardId) {\r\n    return fetch(this._url + \"cards/\" + cardId, {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  activeLike(cardId) {\r\n    return fetch(this._url + \"cards/\" + cardId + \"/likes\", {\r\n      method: \"PUT\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this._verifyRes);\r\n  }\r\n\r\n  unactiveLike(cardId) {\r\n    return fetch(this._url + \"cards/\" + cardId + \"/likes\", {\r\n      method: \"DELETE\",\r\n      headers: {\r\n        authorization: this._token,\r\n      },\r\n    }).then(this._verifyRes);\r\n  }\r\n}\r\n\r\nconst api = new Api({\r\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-66/\",\r\n  headers: {\r\n    authorization: \"d4c04a33-0990-4ec8-944d-d2a160888358\",\r\n    \"Content-Type\": \"application/json\",\r\n  },\r\n});\r\n\r\nexport default api;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}